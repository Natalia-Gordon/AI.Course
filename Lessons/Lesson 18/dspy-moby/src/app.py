import os
import sys

import gradio as gr

# Add the project root to the Python path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from src.rag_pipeline import RAG

# --- 1. Initialize the RAG Pipeline ---
print("Initializing the RAG pipeline... This may take a moment.")
try:
    rag_pipeline = RAG(k=5) # Retrieve top 5 passages for more context
    print("RAG pipeline initialized successfully.")
except Exception as e:
    print(f"Error initializing RAG pipeline: {e}")
    # Exit or handle the error appropriately
    rag_pipeline = None

# --- 2. Define the Prediction Function ---
def ask_moby_dick(question: str):
    """
    The main function that powers the Gradio interface.
    It takes a question and returns an answer from the RAG pipeline.
    This is a generator function to provide a loading state.
    """
    if not rag_pipeline:
        yield "Error: The RAG pipeline is not available. Please check the console for errors."
        return
    
    if not question.strip():
        yield "Please ask a question."
        return
    
    yield "âŒ› Thinking..."

    print(f"Received question: {question}")
    prediction = rag_pipeline(question)
    answer = prediction.answer
    context = prediction.context
    
    print(f"Generated answer: {answer}")
    
    # Format the output with the answer and the source passages
    formatted_output = f"## Answer\n{answer}\n\n---\n\n### Based on these passages:\n\n"
    for i, passage in enumerate(context, 1):
        # Indent passage as a blockquote for Markdown
        indented_passage = passage.replace("\n", "\n> ")
        formatted_output += f"**{i}.**\n> {indented_passage}\n\n"
    yield formatted_output

# --- 3. Create and Launch the Gradio Interface ---
if __name__ == "__main__":
    if rag_pipeline:
        print("Launching Gradio interface...")
        
        # Define some example questions
        examples = [
            ["Who is Captain Ahab?"],
            ["What is the Pequod?"],
            ["Describe the white whale."],
            ["What is the significance of the doubloon?"],
        ]

        # Create the Gradio interface
        iface = gr.Interface(
            fn=ask_moby_dick,
            inputs=gr.Textbox(
                lines=2, 
                placeholder="e.g., What is the Pequod?", 
                label="Ask a Question about Moby Dick"
            ),
            outputs=gr.Markdown(
                label="Answer and Sources"
            ),
            title="Ask Moby Dick (with DSPy and Gemini)",
            description="This is a simple RAG application that uses DSPy to answer questions about Herman Melville's Moby Dick. The text has been indexed using FAISS, and answers are generated by Google's Gemini model.",
            examples=examples,
            allow_flagging="never"
        )

        # Launch the app
        iface.launch()
    else:
        print("Could not launch Gradio interface because the RAG pipeline failed to initialize.")
